/**
 *
 *  CategoryController.h
 *  This file is generated by drogon_ctl
 *
 */

#pragma once

#include <drogon/HttpController.h>
#include "CategoryControllerBase.h"

#include "Category.h"
using namespace drogon;
using namespace drogon_model::cloud_storage;
/**
 * @brief this class is created by the drogon_ctl command.
 * this class is a restful API controller for reading and writing the category table.
 */

class CategoryController: public drogon::HttpController<CategoryController>, public CategoryControllerBase
{
  public:
    METHOD_LIST_BEGIN
    ADD_METHOD_TO(CategoryController::getOne,"/category/{1}",Get,Options);
    ADD_METHOD_TO(CategoryController::updateOne,"/category/{1}",Put,Options);
    ADD_METHOD_TO(CategoryController::deleteOne,"/category/{1}",Delete,Options);
    ADD_METHOD_TO(CategoryController::get,"/category",Get,Options);
    ADD_METHOD_TO(CategoryController::create,"/category",Post,Options);
    //ADD_METHOD_TO(CategoryController::update,"/category",Put,Options);
    METHOD_LIST_END
     
    void getOne(const HttpRequestPtr &req,
                std::function<void(const HttpResponsePtr &)> &&callback,
                Category::PrimaryKeyType &&id);
    void updateOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   Category::PrimaryKeyType &&id);
    void deleteOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   Category::PrimaryKeyType &&id);
    void get(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);
    void create(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);

};
