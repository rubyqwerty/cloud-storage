/**
 *
 *  FileController.h
 *  This file is generated by drogon_ctl
 *
 */

#pragma once

#include <drogon/HttpController.h>
#include "FileControllerBase.h"

#include "File.h"
using namespace drogon;
using namespace drogon_model::cloud_storage;
/**
 * @brief this class is created by the drogon_ctl command.
 * this class is a restful API controller for reading and writing the file table.
 */

class FileController: public drogon::HttpController<FileController>, public FileControllerBase
{
  public:
    METHOD_LIST_BEGIN
    ADD_METHOD_TO(FileController::getOne,"/file/{1}",Get,Options);
    ADD_METHOD_TO(FileController::updateOne,"/file/{1}",Put,Options);
    ADD_METHOD_TO(FileController::deleteOne,"/file/{1}",Delete,Options);
    ADD_METHOD_TO(FileController::get,"/file",Get,Options);
    ADD_METHOD_TO(FileController::create,"/file",Post,Options);
    //ADD_METHOD_TO(FileController::update,"/file",Put,Options);
    METHOD_LIST_END
     
    void getOne(const HttpRequestPtr &req,
                std::function<void(const HttpResponsePtr &)> &&callback,
                File::PrimaryKeyType &&id);
    void updateOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   File::PrimaryKeyType &&id);
    void deleteOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   File::PrimaryKeyType &&id);
    void get(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);
    void create(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);

};
